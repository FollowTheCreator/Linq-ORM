// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MoneyManager.DAL.Models.Contexts;
using System;

namespace MoneyManager.DAL.Migrations
{
    [DbContext(typeof(MoneyManagerContext))]
    [Migration("20190826120321_RemoveParentId")]
    partial class RemoveParentId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoneyManager.DAL.Interfaces.Models.Asset", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("MoneyManager.DAL.Interfaces.Models.Category", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("MoneyManager.DAL.Interfaces.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(16, 3)");

                    b.Property<Guid>("AssetId");

                    b.Property<Guid>("CategoryId");

                    b.Property<string>("Comment")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("Date");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("MoneyManager.DAL.Interfaces.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("MoneyManager.DAL.Interfaces.Models.User", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UK_Email");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MoneyManager.DAL.Interfaces.Models.Asset", b =>
                {
                    b.HasOne("MoneyManager.DAL.Interfaces.Models.User", "User")
                        .WithMany("Asset")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Asset_User_Id");
                });

            modelBuilder.Entity("MoneyManager.DAL.Interfaces.Models.Category", b =>
                {
                    b.HasOne("MoneyManager.DAL.Interfaces.Models.Type", "TypeNavigation")
                        .WithMany("Category")
                        .HasForeignKey("Type")
                        .HasConstraintName("FK_Category_Type_Id");
                });

            modelBuilder.Entity("MoneyManager.DAL.Interfaces.Models.Transaction", b =>
                {
                    b.HasOne("MoneyManager.DAL.Interfaces.Models.Asset", "Asset")
                        .WithMany("Transaction")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_Transaction_Asset_Id");

                    b.HasOne("MoneyManager.DAL.Interfaces.Models.Category", "Category")
                        .WithMany("Transaction")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Transaction_Category_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
